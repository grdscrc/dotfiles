function mkcd {
  mkdir "$@" && cd "$@";
}

function swop {
  if [ $# -ne 2 ]; then # Less than 2 parameters
    >&2 echo "Usage : swop <regex to replace> <replacement>" && return 0
  fi

  ack -l "$1" | xargs perl -pi -E "s/$1/$2/g";
}

function hush {
  $@ 2> /dev/null
}

function errcho {
  (>&2 echo $@)
}

function git_cherry_nibble {
  if [ $# -ne 1 ]; then # Other than 1 parameter
    >&2 echo "Usage : git_cherry_nibble <commit hash>"
    return 0
  fi

  git cherry-pick $1 && git reset --soft HEAD
}

function git_pop_branch {
  branchtopop=$(git current-branch)
  git checkout master
  git branch --delete $branchtopop
}

function deploy_sisra_proxy {
  echo $@
  DIR=`pwd`
  cd /Users/igor/work/syadem/sisra-ws-security-proxy
  gradle build
  ./deploy.sh $@
  cd $DIR
}

function log_sisra_proxy {
  if [[ $1 == "local" ]]; then
    tail -f /Users/igor/work/syadem/sisra-ws-security-proxy/log/development.log
  else
    hm ssh $1 prv "tail -f /opt/sisra_ws_security_proxy/sisra_ws_security_proxy.log"
  fi
}

function nokogiripleasewithversion {
  version="$1"
  libxml2_prefix=$(brew --prefix libxml2)
  gem install nokogiri -v "$version" -- \
    --use-system-libraries \
    --with-xml2-include="$libxml2_prefix"/include/libxml2
}

function colp {
  column_ref=$1
  awk "{print \$$column_ref}"
}

function gchain {
  for command in "$@"; do
    echo $command | xargs git
  done
}

function rjq {
  if [[ $# < 1 ]]; then
    >&2 echo 'rjson $remote:$path $json_selector'
    return 0
  fi
  rclone lsjson $1 | jq $2
}

function agv {
  ag -l "$1" | xargs -o vim +/"$1"
}
